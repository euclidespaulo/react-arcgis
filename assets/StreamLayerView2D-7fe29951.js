import{a as i,b as n,c as y,l,U as d,dC as h}from"./index-7963d4d4.js";import{d as _}from"./FeatureSet-dbb0e0b5.js";import f from"./FeatureLayerView2D-18d75c2a.js";import{e as S}from"./util-bfebac90.js";import{d as v}from"./FeatureEffect-807f136d.js";import"./Field-d77a8215.js";import"./fieldType-673942bd.js";import"./Container-befcc23e.js";import"./parser-554850ab.js";import"./definitions-4190f5ba.js";import"./enums-b14466b3.js";import"./Texture-e38be9d6.js";import"./Query-9b208b7c.js";import"./LayerView-3efe014e.js";import"./AttributeStoreView-ca2862eb.js";import"./TiledDisplayObject-82b4a106.js";import"./LabelClass-3855bc1c.js";import"./labelUtils-29518584.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-170ded2f.js";import"./diffUtils-c3909250.js";import"./labelingInfo-57ed1c35.js";import"./color-d3e8ab8e.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-3dae3c93.js";import"./VertexArrayObject-ebe38004.js";import"./ProgramTemplate-ab52180b.js";import"./GeometryUtils-a033350a.js";import"./heatmapUtils-c2534201.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-3cfd4c3d.js";import"./featureConversionUtils-b964f182.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-0d14d0fe.js";import"./ExpandedCIM-c79660a9.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-7e5c14d1.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-553ec169.js";import"./floatRGBA-fe98b328.js";import"./clusterUtils-329049e2.js";import"./SizeVariable-30352570.js";import"./colorRamps-4a2c033a.js";import"./LegendOptions-abb39b11.js";import"./lengthUtils-3299f41f.js";import"./BitmapTileContainer-31dfd530.js";import"./Bitmap-6ebd9187.js";import"./TileContainer-a7d277aa.js";import"./CircularArray-ef508845.js";import"./BufferPool-d93e55c1.js";import"./FeatureContainer-95c48ed6.js";import"./commonProperties-6814a39e.js";import"./ElevationInfo-ee94dcc6.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-ddd57d6e.js";import"./RefreshableLayerView-f654c5c1.js";import"./jsonUtils-1f71c911.js";const g=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],t.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],t.prototype,"connectionStatus",null),i([n({type:v})],t.prototype,"filter",void 0),t=i([y("esri.layers.mixins.StreamLayerView")],t),t};function c(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let o=class extends g(f){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return h(e.map(p=>this.on(p,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const a=super.on(e,t),s=this;return{remove(){a.remove(),r&&(s._proxy.closed||s.hasEventListener(e)||s._proxy.enableEvent(e,!1))}}}queryLatestObservations(e,t){var r,a,s;if(!((r=this.layer.timeInfo)!=null&&r.endField||(a=this.layer.timeInfo)!=null&&a.startField||(s=this.layer.timeInfo)!=null&&s.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(p=>{const m=_.fromJSON(p);return m.features.forEach(u=>{u.layer=this.layer,u.sourceLayer=this.layer}),m})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;(e=this._proxy)==null||e.pauseStream()}_doResume(){var e;(e=this._proxy)==null||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(m=>m.toJSON()),a=S(e.geometryType),s=e.timeInfo&&e.timeInfo.toJSON()||null,p=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,geometryType:a,objectIdField:t,timeInfo:s,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:p,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};i([n()],o.prototype,"pipelineConnectionStatus",void 0),i([n()],o.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],o.prototype,"connectionError",null),i([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=i([y("esri.views.2d.layers.StreamLayerView2D")],o);const Te=o;export{Te as default};
