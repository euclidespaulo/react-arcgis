import{eO as K,l as W,f as A,eP as X,eQ as Z,s as k,U as ee,dw as te,n as I,eR as x,e8 as re,eS as ie,dv as se,dx as oe,B as ne,dy as ae,dz as le,dA as he,dB as me,E as pe,eT as de,V as ce,q as z,y as ue,r as fe,eU as ye,d as _e,as as ve,eV as ge,a as M,b as D,c as we,D as Re,eW as $e}from"./index-7963d4d4.js";import"./UniqueValueRenderer-d9c6adaa.js";import"./jsonUtils-55a27fb8.js";import{j as xe,i as H}from"./perspectiveUtils-3d540d3f.js";import"./MagnifierPrograms-816c5e60.js";import{i as Me}from"./Container-befcc23e.js";import"./BufferPool-d93e55c1.js";import{T as Te}from"./color-d3e8ab8e.js";import{i as Ee,w as be}from"./WGLContainer-3dae3c93.js";import{D as Ve,F as L}from"./enums-b14466b3.js";import{e as Ce,T as Se}from"./Texture-e38be9d6.js";import"./ProgramTemplate-ab52180b.js";import"./definitions-4190f5ba.js";import"./GeometryUtils-a033350a.js";import{c as Q,u as qe}from"./VertexArrayObject-ebe38004.js";import"./StyleDefinition-29c49b98.js";import"./enums-fb086c25.js";import"./OrderIndependentTransparency-309a1bc3.js";import"./floatRGBA-fe98b328.js";import"./testSVGPremultipliedAlpha-313d3c90.js";import"./GraphicsView2D-5ca51403.js";import"./AttributeStoreView-ca2862eb.js";import"./earcut-3cfd4c3d.js";import"./featureConversionUtils-b964f182.js";import"./lengthUtils-3299f41f.js";import{r as Ae}from"./vec3f32-ad1dc57f.js";import{v as De}from"./normalizeUtils-177a2192.js";import{e as Ge}from"./mat3f64-221ce671.js";import{f as Pe,d as Oe}from"./LayerView-3efe014e.js";import"./LegendOptions-abb39b11.js";import"./diffUtils-c3909250.js";import"./SizeVariable-30352570.js";import"./colorRamps-4a2c033a.js";import"./ColorStop-9a1877a7.js";import"./featureFlags-170ded2f.js";import"./styleUtils-90aa8275.js";import"./DictionaryLoader-3032dcef.js";import"./LRUCache-50962364.js";import"./FieldsIndex-86e1c691.js";import"./heatmapUtils-c2534201.js";import"./vec4f64-aa64c7e9.js";import"./normalizeUtilsSync-5b9d123d.js";import"./normalizeUtilsCommon-062a2641.js";import"./ExpandedCIM-c79660a9.js";import"./BidiEngine-9a40f2f4.js";import"./OptimizedGeometry-33b2eb0d.js";import"./GeometryUtils-984e8446.js";import"./enums-f1a6a48a.js";import"./utils-7e5c14d1.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-553ec169.js";import"./rasterizingUtils-46605522.js";import"./pbf-5049679b.js";import"./imageutils-1cf94059.js";import"./Matcher-4a921192.js";import"./visualVariablesUtils-0d14d0fe.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-bd7d5d5c.js";import"./defaultsJSON-b087dd4d.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-60ad02c8.js";import"./CircularArray-ef508845.js";import"./throttle-7bf02de9.js";import"./ComputedAttributeStorage-0c5a6941.js";import"./arcadeTimeUtils-354ea643.js";import"./executionError-c92d3b85.js";import"./projectionSupport-41108da0.js";import"./json-48e3ea08.js";import"./parser-554850ab.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./basicInterfaces-4ab7cc6a.js";import"./LabelClass-3855bc1c.js";import"./labelUtils-29518584.js";import"./TiledDisplayObject-82b4a106.js";import"./labelingInfo-57ed1c35.js";import"./clusterUtils-329049e2.js";import"./util-bfebac90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";const _=Ge();let Ue=class extends Me{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=K(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(W(()=>this.elementView.element.opacity,t=>this.opacity=t,A),W(()=>[this.elementView.coords],()=>{this.requestRender()},A),X(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&t.content!=null&&this._handles.push(Z(t.content,"play",()=>this.requestRender()))},A)),e.element.load().catch(t=>{k.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new ee("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=te(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,i=this.elementView.element.content;if(i!=null){const s=i instanceof HTMLImageElement,o=i instanceof HTMLVideoElement,a=s?i.naturalWidth:o?i.videoWidth:i.width,n=s?i.naturalHeight:o?i.videoHeight:i.height;if(this._updatePerspectiveTransform(a,n),this.texture)o&&!i.paused&&(this.texture.setData(i),this.requestRender(),(t.type===I.WEBGL2||x(a)&&x(n))&&this.texture.generateMipmap());else{const m=new Ce;m.wrapMode=Ve.CLAMP_TO_EDGE,m.preMultiplyAlpha=!0,m.width=a,m.height=n,this.texture=new Se(t,m,i),(t.type===I.WEBGL2||x(a)&&x(n))&&this.texture.generateMipmap(),o&&!i.paused&&this.requestRender()}}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const i=this.elementView.coords;if(i==null)return;const[s,o,a,n]=i.rings[0],m=this._vertices,{x:l,y:h}=e,c=t!==0;c?m.set([o[0]-l,o[1]-h,s[0]-l,s[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h,n[0]-l,n[1]-h,o[0]+t-l,o[1]-h,o[0]+t-l,o[1]-h,s[0]+t-l,s[1]-h,a[0]+t-l,a[1]-h,n[0]+t-l,n[1]-h]):m.set([o[0]-l,o[1]-h,s[0]-l,s[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h]),this.isWrapAround=c}getVAO(e,t,i){if(this.elementView.coords==null)return null;const s=this._vertices;if(this._vao)this._geometryVbo.setData(s);else{this._geometryVbo=Q.createVertex(e,L.DYNAMIC_DRAW,s);const o=Q.createVertex(e,L.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new qe(e,i,t,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(e,t){const i=this._vertices;xe(_,[0,0,e,0,0,t,e,t],[i[0],i[1],i[4],i[5],i[2],i[3],i[6],i[7]]),re(this.perspectiveTransform,_[6]/_[8]*e,_[7]/_[8]*t)}};class je extends Ee{constructor(){super(...arguments),this._localOrigin=ie(0,0),this._viewStateId=-1,this._dvsMat3=se(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[be.overlay],target:()=>this.children,drawPhase:Te.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:i,size:s,pixelRatio:o,resolution:a,rotation:n,viewpoint:m,displayMat3:l}=t;if(this._viewStateId===i)return;const h=Math.PI/180*n,c=o*s[0],f=o*s[1],{x:T,y:g}=m.targetGeometry,E=De(T,t.spatialReference);this._localOrigin.x=E,this._localOrigin.y=g;const b=a*c,w=a*f,p=oe(this._dvsMat3);ne(p,p,l),ae(p,p,le(c/2,f/2)),he(p,p,Ae(c/b,-f/w,1)),me(p,p,-h),this._viewStateId=i}_updateOverlays(e,t){const{state:i}=e,{rotation:s,spatialReference:o,worldScreenWidth:a,size:n,viewpoint:m}=i,l=this._localOrigin;let h=0;const c=pe(o);if(c&&o.isWrappable){const f=n[0],T=n[1],g=180/Math.PI*s,E=Math.abs(Math.cos(g)),b=Math.abs(Math.sin(g)),w=Math.round(f*E+T*b),[p,V]=c.valid,u=de(o),{x:G,y:F}=m.targetGeometry,N=[G,F],C=[0,0];i.toScreen(C,N);const R=[0,0];let S;S=w>a?.5*a:.5*w;const P=Math.floor((G+.5*u)/u),Y=p+P*u,J=V+P*u,q=[C[0]+S,0];i.toMap(R,q),R[0]>J&&(h=u),q[0]=C[0]-S,i.toMap(R,q),R[0]<Y&&(h=-u);for(const $ of t){const O=$.elementView.bounds;if(O==null)continue;const[U,,j]=O;U<p&&j>p?$.updateDrawCoords(l,u):j>V&&U<V?$.updateDrawCoords(l,-u):$.updateDrawCoords(l,h)}}else for(const f of t)f.updateDrawCoords(l,h)}}let y=class extends Pe(Oe){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new ce}attach(){this.addAttachHandles([z(()=>this.layer.effectiveSource,"refresh",()=>{this._tileStrategy.refresh(r=>this._updateTile(r)),this.requestUpdate()}),z(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new je,this.container.addChild(this._overlayContainer),this._fetchQueue=new ue({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new fe({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],i=r.normalize(),s=[i.x,i.y];for(const{projectedElement:{normalizedCoords:o,element:a}}of this._elementReferences.values())o!=null&&ye(o.rings,s)&&t.push({type:"media",element:a,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.refresh(r=>this._updateTile(r))}_acquireTile(r){const e=new We(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,i]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,i),this.requestUpdate()},e=>{_e(e)||k.getLogger(this).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(t==null)return[];this.view.featuresTilingScheme.getTileBounds(d,r,!0);const i=new ve({xmin:d[0],ymin:d[1],xmax:d[2],ymax:d[3],spatialReference:this.view.spatialReference});return t.queryElements(i,e)}_referenceElements(r,e){if(this.layer.source!=null)for(const t of e)this._referenceElement(r,t)}_referenceElement(r,e){ge(this._elementReferences,e.uid,()=>{const t=new H({element:e,spatialReference:this.view.spatialReference}),i=new Ue(t);return this._overlayContainer.addChild(i),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:i,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var i;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(i=this._debugGraphicsView)==null||i.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var i;let e=this._elementReferences.get(r.uid);if(e){const s=e.projectedElement.normalizedCoords;if(s==null)return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((i=this._debugGraphicsView)==null?void 0:i.graphics.remove(e.debugGraphic));const o=[],a=[];for(const n of this._tileStrategy.tiles){const m=B(this.view.featuresTilingScheme,n,s);e.tiles.has(n)?m||a.push(n):m&&o.push(n)}for(const n of o)this._referenceElement(n,r);for(const n of a)this._dereferenceElement(n,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new H({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(t!=null)for(const s of this._tileStrategy.tiles)B(this.view.featuresTilingScheme,s,t)&&this._referenceElement(s,r)}};M([D()],y.prototype,"_fetchQueue",void 0),M([D()],y.prototype,"layer",void 0),M([D({readOnly:!0})],y.prototype,"elements",void 0),y=M([we("esri.views.2d.layers.MediaLayerView2D")],y);const d=Re(),v={xmin:0,ymin:0,xmax:0,ymax:0};function B(r,e,t){return r.getTileBounds(d,e.key,!0),v.xmin=d[0],v.ymin=d[1],v.xmax=d[2],v.ymax=d[3],$e(v,t)}class We{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],i=new Set(this.elements);this.elements=e;for(const s of e)i.has(s)?i.delete(s):t.push(s);return this.isReady=!0,[t,Array.from(i)]}destroy(){}}const dr=y;export{dr as default};
