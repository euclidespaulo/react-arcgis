import{g as s,j as o,V as a,R as m,a as p,b as g,c as l}from"./index-7963d4d4.js";import{f as c,d as n}from"./LayerView-3efe014e.js";import{i as d}from"./GraphicContainer-ba305346.js";import{o as u}from"./GraphicsView2D-5ca51403.js";import"./Container-befcc23e.js";import"./parser-554850ab.js";import"./definitions-4190f5ba.js";import"./enums-b14466b3.js";import"./Texture-e38be9d6.js";import"./color-d3e8ab8e.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-0ab44722.js";import"./FeatureContainer-95c48ed6.js";import"./AttributeStoreView-ca2862eb.js";import"./TiledDisplayObject-82b4a106.js";import"./LabelClass-3855bc1c.js";import"./labelUtils-29518584.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-170ded2f.js";import"./diffUtils-c3909250.js";import"./labelingInfo-57ed1c35.js";import"./WGLContainer-3dae3c93.js";import"./VertexArrayObject-ebe38004.js";import"./ProgramTemplate-ab52180b.js";import"./GeometryUtils-a033350a.js";import"./heatmapUtils-c2534201.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-3cfd4c3d.js";import"./featureConversionUtils-b964f182.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-0d14d0fe.js";import"./ExpandedCIM-c79660a9.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-7e5c14d1.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-553ec169.js";import"./floatRGBA-fe98b328.js";import"./clusterUtils-329049e2.js";import"./SizeVariable-30352570.js";import"./colorRamps-4a2c033a.js";import"./LegendOptions-abb39b11.js";import"./lengthUtils-3299f41f.js";import"./util-bfebac90.js";import"./TileContainer-a7d277aa.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-177a2192.js";import"./normalizeUtilsCommon-062a2641.js";import"./normalizeUtilsSync-5b9d123d.js";import"./projectionSupport-41108da0.js";import"./json-48e3ea08.js";import"./Matcher-4a921192.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-bd7d5d5c.js";import"./LRUCache-50962364.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-90aa8275.js";import"./webStyleSymbolUtils-60ad02c8.js";import"./ComputedAttributeStorage-0c5a6941.js";import"./FieldsIndex-86e1c691.js";import"./arcadeTimeUtils-354ea643.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=s(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};p([g()],e.prototype,"graphicsView",void 0),e=p([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const qi=e;export{qi as default};
