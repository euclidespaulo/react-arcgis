import{a as i,b as r,c as m,eo as v,cI as w,as as S,dm as O,v as F,ay as b,cX as I,dZ as q,O as N,a7 as _,aa as J,U as h}from"./index-cc0ee9b2.js";import{B as C}from"./FeatureLayer-f41ab1a4.js";import{d as P}from"./FeatureSet-a5d2b0a7.js";import{c as j}from"./clientSideDefaults-fb82ccfd.js";import{b as l}from"./Query-39fea8fb.js";import"./UniqueValueRenderer-dfcbf549.js";import"./LegendOptions-a48dfe3c.js";import"./diffUtils-232a480c.js";import"./SizeVariable-c56811d6.js";import"./colorRamps-756b6677.js";import"./lengthUtils-80770c4f.js";import"./ColorStop-4b4d398e.js";import"./featureFlags-b7471751.js";import"./styleUtils-26d43f85.js";import"./jsonUtils-fe49b272.js";import"./DictionaryLoader-99da79b0.js";import"./LRUCache-347f2d39.js";import"./FieldsIndex-05a45e5a.js";import"./heatmapUtils-8f838e1c.js";import"./vec4f64-aa64c7e9.js";import"./MultiOriginJSONSupport-ad3656cb.js";import"./LabelClass-889faf92.js";import"./labelUtils-1b17ff16.js";import"./defaultsJSON-b087dd4d.js";import"./FeatureLayerBase-ffb62e13.js";import"./Field-bf5ace58.js";import"./fieldType-a8735abb.js";import"./commonProperties-2a96b451.js";import"./ElevationInfo-18e9ce10.js";import"./featureLayerUtils-a0e37d37.js";import"./AttachmentQuery-c7c7e92b.js";import"./RelationshipQuery-5c512fcf.js";import"./serviceCapabilitiesUtils-5e90b29f.js";import"./queryZScale-ac0e78a5.js";import"./APIKeyMixin-648febcf.js";import"./ArcGISService-aea881d2.js";import"./BlendLayer-bd7e52ec.js";import"./jsonUtils-ac963ed3.js";import"./parser-7cb9f852.js";import"./CustomParametersMixin-4b130093.js";import"./FeatureEffectLayer-60fa475e.js";import"./FeatureEffect-5ae8ceff.js";import"./FeatureReductionLayer-8884c16c.js";import"./clusterUtils-d9d6aed2.js";import"./OperationalLayer-198aa482.js";import"./OrderedLayer-70afa4e8.js";import"./PortalLayer-cc2d9fe0.js";import"./portalItemUtils-b1a175c4.js";import"./RefreshableLayer-74995653.js";import"./ScaleRangeLayer-19572bd4.js";import"./TemporalLayer-fade5e60.js";import"./FeatureTemplate-87d6fd73.js";import"./FeatureType-7e2e1119.js";import"./fieldProperties-cf4f9d1d.js";import"./labelingInfo-48e3897a.js";import"./versionUtils-8d790ec0.js";import"./styleUtils-18b1a6ce.js";import"./TopFeaturesQuery-74b9c555.js";import"./popupUtils-e2d577d1.js";import"./QueryEngineCapabilities-42e44ded.js";let n=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:s,timeExtent:a}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),a&&(this.sourceJSON.timeInfo.timeExtent=[a.start,a.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return P.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:S.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await O("CSVSourceWorker",{strategy:F("feature-layers-workers")?"dedicated":"local",signal:t});const{url:e,delimiter:s,fields:a,latitudeField:y,longitudeField:f,spatialReference:u,timeInfo:d}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:a==null?void 0:a.map(g=>g.toJSON()),latitudeField:y,longitudeField:f,spatialReference:u==null?void 0:u.toJSON(),timeInfo:d==null?void 0:d.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],n.prototype,"type",void 0),i([r()],n.prototype,"loadOptions",void 0),i([r()],n.prototype,"customParameters",void 0),i([r()],n.prototype,"locationInfo",void 0),i([r()],n.prototype,"sourceJSON",void 0),i([r()],n.prototype,"delimiter",void 0),n=i([m("esri.layers.graphics.sources.CSVSource")],n);function c(t,e){throw new h(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends C{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=N.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(_).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!(e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=J(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new n({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s!=null&&s.features)for(const a of s.features)a.layer=a.sourceLayer=this;return s})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(l.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new h("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return c(this,"csv-layer:save")}async saveAs(t,e){return c(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([b("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:n,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:I,write:{isRequired:!0,ignoreOrigin:!0,writer:q}}})],o.prototype,"url",null),o=i([m("esri.layers.CSVLayer")],o);const Vt=o;export{Vt as default};
