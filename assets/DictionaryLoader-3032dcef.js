import{U as v,d as $,d_ as j,at as I,s as S,a2 as M,d$ as x,e0 as L,e1 as R}from"./index-7963d4d4.js";import{e as T}from"./LRUCache-50962364.js";import{r as N}from"./FieldsIndex-86e1c691.js";let w=class{constructor(r,t,e=""){this.major=r,this.minor=t,this._context=e}lessThan(r,t){return this.major<r||r===this.major&&this.minor<t}since(r,t){return!this.lessThan(r,t)}validate(r){if(this.major!==r.major){const t=this._context&&this._context+":",e=this._context&&this._context+" ";throw new v(t+"unsupported-version",`Required major ${e}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:r})}}clone(){return new w(this.major,this.minor,this._context)}static parse(r,t=""){const[e,s]=r.split("."),i=/^\s*\d+\s*$/;if(!e||!e.match||!i.test(e))throw new v((t&&t+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:r});if(!s||!s.match||!i.test(s))throw new v((t&&t+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",{version:r});const a=parseInt(e,10),c=parseInt(s,10);return new w(a,c,t)}};const P="esri.renderers.support.DictionaryLoader",F={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class q{constructor(t,e,s){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new T(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=t,this.config=e,this.fieldMap=s}getSymbolFields(){return this._symbolFields}async getSymbolAsync(t,e){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(e));try{s=await this._dictionaryPromise}catch(o){if($(o))return this._dictionaryPromise=null,null}const i=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),a={};if(this.fieldMap)for(const o of this._symbolFields){const l=this._getFieldName(this.fieldMap[o]);a[o]=l?i?t.attributes[l]:""+t.attributes[l]:""}let c=null;try{c=s==null?void 0:s(a,e)}catch{return null}if(!c||typeof c!="string")return null;const u=j(c).toString(),h=this._symbolCache.get(u);if(h)return h.catch(()=>{this._symbolCache.pop(u)}),h;const _=c.split(";"),m=[],y=[];for(const o of _)if(o)if(o.includes("po:")){const l=o.substr(3).split("|");if(l.length===3){const d=l[0],g=l[1];let f=l[2];if(g==="DashTemplate")f=f.split(" ").map(p=>Number(p));else if(g==="Color"){const p=new I(f).toRgba();f=[p[0],p[1],p[2],255*p[3]]}else f=Number(f);y.push({primitiveName:d,propertyName:g,value:f})}}else if(o.includes("|")){for(const l of o.split("|"))if(this._itemNames.has(l)){m.push(l);break}}else this._itemNames.has(o)&&m.push(o);const b=t.geometry==null||!t.geometry.hasZ&&t.geometry.type==="point",n=this._cimPartsToCIMSymbol(m,y,b,e);return this._symbolCache.put(u,n,1),n}async fetchResources(t){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void S.getLogger(P).error("no valid URL!");const e=M(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:t!=null?t.signal:null}),[{data:s}]=await Promise.all([e,x()]);if(!s)throw this._dictionaryPromise=null,new v("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:i,dictionary_version:a,expression:c,itemsNames:u}=s,h=c;let _=!1;a&&(this._dictionaryVersion=w.parse(a),_=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+s.cimRefTemplateUrl,this._itemNames=new Set(u),this._symbolFields=i.symbol;const m={};if(this.config){const n=this.config;for(const o in n)m[o]=n[o]}if(i.configuration)for(const n of i.configuration)m.hasOwnProperty(n.name)||(m[n.name]=n.value);const y=[];if(t!=null&&t.fields&&this.fieldMap)for(const n of this._symbolFields){const o=this.fieldMap[n],l=t.fields.filter(d=>d.name.toLowerCase()===(o==null?void 0:o.toLowerCase()));l.length>0&&y.push({...l[0],type:_?l[0].type:"esriFieldTypeString"})}y.length>0&&(this._fieldIndex=new N(y));const b=L(h,t!=null?t.spatialReference:null,y,m).then(n=>{const o={scale:0};return(l,d)=>{if(n==null)return null;const g=n.repurposeFeature({geometry:null,attributes:l});return o.scale=d!=null?d.scale??void 0:void 0,n.evaluate({$feature:g,$view:o},n.services)}}).catch(n=>(S.getLogger(P).error("Creating dictinoary expression failed:",n),null));return this._dictionaryPromise=b,b}async _cimPartsToCIMSymbol(t,e,s,i){const a=new Array(t.length);for(let h=0;h<t.length;h++)a[h]=this._getSymbolPart(t[h],i);const c=await Promise.all(a),u=this.fieldMap;if(u)for(const h of c)C(h,u);return new R({data:this._combineSymbolParts(c,e,s)})}async _getSymbolPart(t,e){if(this._ongoingRequests.has(t))return this._ongoingRequests.get(t).then(a=>a.data);const s=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,t),i=M(s,{responseType:"json",query:{f:"json"},...e});this._ongoingRequests.set(t,i);try{return(await i).data}catch(a){throw this._ongoingRequests.delete(t),a}}_combineSymbolParts(t,e,s){if(!t||t.length===0)return null;const i={...t[0]};if(t.length>1){i.symbolLayers=[];for(const a of t){const c=a;i.symbolLayers.unshift(...c.symbolLayers)}}return s&&(i.callout=F),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:e}}_getFieldName(t){if(this._fieldIndex!==null){const e=this._fieldIndex.get(t);return e?e.name:t}return t}}function C(r,t){if(!r)return;const e=r.symbolLayers;if(!e)return;let s=e.length;for(;s--;){const i=e[s];i&&i.enable!==!1&&i.type==="CIMVectorMarker"&&D(i,t)}}function D(r,t){const e=r.markerGraphics;if(e)for(const s of e){if(!s)continue;const i=s.symbol;if(i)switch(i.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":C(i,t);break;case"CIMTextSymbol":i.fieldMap=t}}}const O=Object.freeze(Object.defineProperty({__proto__:null,DictionaryLoader:q},Symbol.toStringTag,{value:"Module"}));export{O as D,w as r,q as y};
