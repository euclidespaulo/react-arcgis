import{a as r,b as t,c as d,U as y}from"./index-7963d4d4.js";import{B as n}from"./FeatureLayer-7487f329.js";import"./UniqueValueRenderer-d9c6adaa.js";import"./LegendOptions-abb39b11.js";import"./diffUtils-c3909250.js";import"./SizeVariable-30352570.js";import"./colorRamps-4a2c033a.js";import"./lengthUtils-3299f41f.js";import"./ColorStop-9a1877a7.js";import"./featureFlags-170ded2f.js";import"./styleUtils-90aa8275.js";import"./jsonUtils-55a27fb8.js";import"./DictionaryLoader-3032dcef.js";import"./LRUCache-50962364.js";import"./FieldsIndex-86e1c691.js";import"./heatmapUtils-c2534201.js";import"./vec4f64-aa64c7e9.js";import"./MultiOriginJSONSupport-83229f36.js";import"./LabelClass-3855bc1c.js";import"./labelUtils-29518584.js";import"./defaultsJSON-b087dd4d.js";import"./FeatureLayerBase-0e1c856a.js";import"./Field-d77a8215.js";import"./fieldType-673942bd.js";import"./commonProperties-6814a39e.js";import"./ElevationInfo-ee94dcc6.js";import"./featureLayerUtils-0208ea7a.js";import"./AttachmentQuery-f2e0d44e.js";import"./Query-9b208b7c.js";import"./RelationshipQuery-6ab43a24.js";import"./serviceCapabilitiesUtils-ea9bb8d4.js";import"./queryZScale-b61e2d05.js";import"./FeatureSet-dbb0e0b5.js";import"./APIKeyMixin-df800849.js";import"./ArcGISService-adb6121f.js";import"./BlendLayer-67be0a8f.js";import"./jsonUtils-1f71c911.js";import"./parser-554850ab.js";import"./CustomParametersMixin-a393e1d0.js";import"./FeatureEffectLayer-c295b13e.js";import"./FeatureEffect-807f136d.js";import"./FeatureReductionLayer-e3fd7e7c.js";import"./clusterUtils-329049e2.js";import"./OperationalLayer-3a2f433d.js";import"./OrderedLayer-bc76bb03.js";import"./PortalLayer-92877bf2.js";import"./portalItemUtils-abfce48b.js";import"./RefreshableLayer-2eb6c233.js";import"./ScaleRangeLayer-b13c2b3b.js";import"./TemporalLayer-d4a7784e.js";import"./FeatureTemplate-ce4177e4.js";import"./FeatureType-1aef3ea6.js";import"./fieldProperties-6658abf8.js";import"./labelingInfo-57ed1c35.js";import"./versionUtils-388d46f9.js";import"./styleUtils-46a7eba5.js";import"./TopFeaturesQuery-b8d8f795.js";import"./popupUtils-5de65a0b.js";function o(i){return(a,m,s)=>{if(!a)return null;const p=a[0].orientedImageryProperties;return(p==null?void 0:p[i])??null}}let e=class extends n{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){var p;const{elevationSource:i,demPathPrefix:a,demPathSuffix:m}=this;if(!((p=i==null?void 0:i.url)!=null&&p.trim()))return i;let s=i.url.trim();return a!=null&&a.trim()&&(s=`${a.trim()}/${s}`),m!=null&&m.trim()&&(s+=`/${m.trim()}`),{...i,url:s}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new y("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([d("esri.layers.OrientedImageryLayer")],e);const fe=e;export{fe as default};
