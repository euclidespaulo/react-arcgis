import{a as r,b as t,c as d,U as y}from"./index-cc0ee9b2.js";import{B as n}from"./FeatureLayer-f41ab1a4.js";import"./UniqueValueRenderer-dfcbf549.js";import"./LegendOptions-a48dfe3c.js";import"./diffUtils-232a480c.js";import"./SizeVariable-c56811d6.js";import"./colorRamps-756b6677.js";import"./lengthUtils-80770c4f.js";import"./ColorStop-4b4d398e.js";import"./featureFlags-b7471751.js";import"./styleUtils-26d43f85.js";import"./jsonUtils-fe49b272.js";import"./DictionaryLoader-99da79b0.js";import"./LRUCache-347f2d39.js";import"./FieldsIndex-05a45e5a.js";import"./heatmapUtils-8f838e1c.js";import"./vec4f64-aa64c7e9.js";import"./MultiOriginJSONSupport-ad3656cb.js";import"./LabelClass-889faf92.js";import"./labelUtils-1b17ff16.js";import"./defaultsJSON-b087dd4d.js";import"./FeatureLayerBase-ffb62e13.js";import"./Field-bf5ace58.js";import"./fieldType-a8735abb.js";import"./commonProperties-2a96b451.js";import"./ElevationInfo-18e9ce10.js";import"./featureLayerUtils-a0e37d37.js";import"./AttachmentQuery-c7c7e92b.js";import"./Query-39fea8fb.js";import"./RelationshipQuery-5c512fcf.js";import"./serviceCapabilitiesUtils-5e90b29f.js";import"./queryZScale-ac0e78a5.js";import"./FeatureSet-a5d2b0a7.js";import"./APIKeyMixin-648febcf.js";import"./ArcGISService-aea881d2.js";import"./BlendLayer-bd7e52ec.js";import"./jsonUtils-ac963ed3.js";import"./parser-7cb9f852.js";import"./CustomParametersMixin-4b130093.js";import"./FeatureEffectLayer-60fa475e.js";import"./FeatureEffect-5ae8ceff.js";import"./FeatureReductionLayer-8884c16c.js";import"./clusterUtils-d9d6aed2.js";import"./OperationalLayer-198aa482.js";import"./OrderedLayer-70afa4e8.js";import"./PortalLayer-cc2d9fe0.js";import"./portalItemUtils-b1a175c4.js";import"./RefreshableLayer-74995653.js";import"./ScaleRangeLayer-19572bd4.js";import"./TemporalLayer-fade5e60.js";import"./FeatureTemplate-87d6fd73.js";import"./FeatureType-7e2e1119.js";import"./fieldProperties-cf4f9d1d.js";import"./labelingInfo-48e3897a.js";import"./versionUtils-8d790ec0.js";import"./styleUtils-18b1a6ce.js";import"./TopFeaturesQuery-74b9c555.js";import"./popupUtils-e2d577d1.js";function o(i){return(a,m,s)=>{if(!a)return null;const p=a[0].orientedImageryProperties;return(p==null?void 0:p[i])??null}}let e=class extends n{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){var p;const{elevationSource:i,demPathPrefix:a,demPathSuffix:m}=this;if(!((p=i==null?void 0:i.url)!=null&&p.trim()))return i;let s=i.url.trim();return a!=null&&a.trim()&&(s=`${a.trim()}/${s}`),m!=null&&m.trim()&&(s+=`/${m.trim()}`),{...i,url:s}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new y("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([d("esri.layers.OrientedImageryLayer")],e);const fe=e;export{fe as default};
